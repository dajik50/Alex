前情回顾

1. 并发模型
　　　　
　　* 循环模型

　　* 多进程多线程并发

2. IO : 阻塞ＩＯ，非阻塞ＩＯ
　　　
　　　setblocking()
     settimeout()

class Person:
     高大 = None
     有钱 = None
     帅气 = None
     幽默 = None
     健壮 = None
     暖男 = None

老祁 = Person()

老祁.有钱 = True
老祁.帅气 = True
老祁.幽默 = True


class Person:
     高大 = 32
     有钱 = 16
     帅气 = 8
     幽默 = 4
     健壮 = 2
     暖男 = 1


博文 = Person()
博文.属性 = 35  # 100011

if 博文.属性 & 暖男： 真表示是暖男，假表示不是暖男

博文.属性 = 博文.属性 | 有钱

select :  支持平台多，效率一般，最多监控1024个IO对象

poll  ： 支持Linux Unix，效率一般，监控IO数量多

epoll ： 支持Linux,效率高，监控IO数量多，支持边缘触发

  * epoll每次register是直接向内核空间存放IO对象，让内核监控。
    而select和poll每次监控，都需要从应用层向系统内核映射IO
  * epoll中IO就绪，直接通过内核告知应用层处理，而select和poll
    需要在应用层进行遍历后才能得知哪个IO就绪。


  水平触发 ： 当有监控的IO发生，如果应用程序没有处理则会一直告知应用程序进行处理，直到IO被处理为止。

  边缘触发 : 当有IO发生，如果没有处理，则不再提醒，直到下次再有IO发生时会一起再告知。


HTTPSERVER2.0

技术分析：

   1. 使用tcp通信，熟悉http协议格式
   2. select IO多路复用

封装： 采用类封装所有功能

   类的设计：
      * 在用户角度考虑类如何使用，达到什么目的
      * 尽可以帮助用户完成更多功能，让使用者简单
      * 无法替使用者决定的参量使用参数传入
      * 让用户继承自己的类，然后重写其中方法

作业 ： 1. 巩固 IO多路复用方法
       2. httpserver看一下
       3. 总结整理 系统编程代码






　　　　
